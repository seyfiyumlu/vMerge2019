<UserControl x:Class="alexbegh.vMerge.View.PrepareMergeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:FieldMapperGrid="clr-namespace:alexbegh.Utility.UserControls.FieldMapperGrid.Control;assembly=Utility"
        xmlns:LoadingProgress="clr-namespace:alexbegh.Utility.UserControls.LoadingProgress.Control;assembly=Utility"
        xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:Converters="clr-namespace:alexbegh.vMerge.View.Converters"
        xmlns:MetroControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:controls="clr-namespace:alexbegh.vMerge.View.Controls"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        Background="{DynamicResource VsBrush.Window}"
        Foreground="{DynamicResource VsBrush.WindowText}"
        mc:Ignorable="d"
        d:DesignHeight="400" d:DesignWidth="755.518">
    <UserControl.Resources>
        <ResourceDictionary Source="..\MainResources.xaml" />
    </UserControl.Resources>
    <Grid>
        <Grid Margin="3" Grid.Column="0" Grid.Row="0" IsEnabled="{Binding Path=EmbeddedCheckInSummaryViewModel, Converter={StaticResource IsNullConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!-- Source and Target selection -->
            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical" Grid.Column="0">
                    <TextBlock FontWeight="Bold" Text="Merge source:" />
                    <LoadingProgress:LoadingProgressControl
                        Margin="10,0,0,0" x:Name="MergeSourceCombo" Progress="{Binding Path=MergeSourcesLoading}" IndicatorStyle="SmallIndicator">
                        <ComboBox
                        ItemsSource="{Binding Path=PossibleMergeSources}"
                        SelectedValue="{Binding Path=MergeSource, Mode=TwoWay}"
                        HorizontalContentAlignment="Stretch"
                        HorizontalAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Width="{Binding Path=ActualWidth, ElementName=MergeSourceCombo}" Margin="0,0,-40,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="60"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding}" HorizontalAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </LoadingProgress:LoadingProgressControl>
                </StackPanel>
                <StackPanel Orientation="Vertical" Grid.Column="1">
                    <TextBlock FontWeight="Bold" Text="Merge target:" />
                    <LoadingProgress:LoadingProgressControl 
                        Margin="10,0,0,0"  Name="MergeTargetCombo" Progress="{Binding Path=MergeTargetsLoading}" IndicatorStyle="SmallIndicator">
                        <ComboBox Grid.Row="3" Grid.Column="1" 
                        ItemsSource="{Binding Path=PossibleMergeTargets}"
                        SelectedValue="{Binding Path=MergeTarget, Mode=TwoWay}"
                        HorizontalContentAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                                            <TextBlock Text="{Binding}" />
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </LoadingProgress:LoadingProgressControl>
                </StackPanel>
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="3,10,3,3">
                    <Grid.ToolTip>
                        <TextBlock>Only changes in or below the selected server path are merged.</TextBlock>
                    </Grid.ToolTip>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="3,6,3,3">Path filter:</TextBlock>
                    <TextBox Grid.Column="1" Margin="3" MaxLines="1" AcceptsReturn="False" AcceptsTab="False" Text="{Binding Path=PathFilter}" />
                    <Button Grid.Column="2" Command="{Binding Path=PickPathFilterCommand}" Content="Browse ..." Margin="3"/>
                </Grid>
            </Grid>
            <!-- Changeset table -->
            <Grid Grid.Row="1" Margin="0,15,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" FontWeight="Bold" Text="Affected changesets:" />
                <LoadingProgress:LoadingProgressControl Grid.Row="1" Progress="{Binding Path=ChangesetsLoading}" IndicatorStyle="BigIndicator" Name="ChangesetsTableLoader">
                    <DataGrid Margin="10,0,0,0"
                CanUserAddRows="False" ItemsSource="{Binding Path=ChangesetList}" AutoGenerateColumns="False"
                CanUserDeleteRows="False" CanUserReorderColumns="False"
                CanUserSortColumns="False"
                IsReadOnly="True"
                MinHeight="200"
                MouseDoubleClick="ChangesetsTable_MouseDoubleClick"
                Loaded="ChangesetsGridLoaded">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Orig. CS">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <ContentControl 
                                        Visibility="{Binding Path=HasWarning, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        VerticalAlignment="Top" HorizontalAlignment="Right" 
                                        Grid.Column="0" MaxWidth="16" MaxHeight="16" 
                                        Template="{StaticResource FlashIcon}">
                                                <ContentControl.ToolTip>
                                                    <Binding Path="WarningText" />
                                                </ContentControl.ToolTip>
                                            </ContentControl>
                                            <StackPanel Orientation="Vertical" Grid.Column="1">
                                                <TextBlock Visibility="{Binding Path=OriginalChangesetLoaded, Converter={StaticResource BooleanToInvisibilityConverter}}">
                                            <Hyperlink Command="{Binding Path=DataContext.FindOriginalChangesetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding Path=SourceCheckinId}">
                                                <Hyperlink.ToolTip>
                                                    <TextBlock>Searches the root changeset</TextBlock>
                                                </Hyperlink.ToolTip>
                                                Find
                                            </Hyperlink>
                                            </TextBlock>
                                                <TextBlock Visibility="{Binding Path=OriginalChangesetLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Hyperlink Command="{Binding Path=DataContext.OpenChangesetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding Path=OriginalChangesetId}">
                                                <TextBlock Text="{Binding Path=OriginalChangesetId}" />
                                            </Hyperlink>
                                        </TextBlock>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Source Comment" SortMemberPath="SourceComment">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                    <Hyperlink Command="{Binding Path=DataContext.OpenChangesetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding Path=SourceCheckinId}">
                                        <TextBlock Text="{Binding Path=SourceComment, Converter={StaticResource StringToSingleLineConverter}}" 
                                            TextWrapping="NoWrap"
                                            TextTrimming="CharacterEllipsis"/>
                                    </Hyperlink>
                                </TextBlock>
                                        <!--<TextBlock Visibility="{Binding Path=SourceExists, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="{Binding Path=SourceComment}" />
                                </TextBlock>-->
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Source CS#" SortMemberPath="SourceCheckinId">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Visibility="{Binding Path=SourceExists, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Hyperlink Command="{Binding Path=DataContext.OpenChangesetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding Path=SourceCheckinId}">
                                        <TextBlock Text="{Binding Path=SourceCheckinId}" />
                                    </Hyperlink>
                                </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Source Date" SortMemberPath="SourceCheckinDate">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Text="{Binding Path=SourceCheckinDate, StringFormat='G', ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" Visibility="{Binding Path=SourceExists, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Target CS#" SortMemberPath="TargetCheckinId">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Visibility="{Binding Path=TargetExists, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Hyperlink Command="{Binding Path=DataContext.OpenChangesetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding Path=TargetCheckinId}">
                                            <TextBlock Text="{Binding Path=TargetCheckinId}" />
                                        </Hyperlink>
                                    </TextBlock>
                                            <TextBlock Visibility="{Binding Path=CanBeMerged, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Hyperlink Command="{Binding Path=DataContext.PerformMergeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding}">
                                            Merge ...
                                        </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Target Date" SortMemberPath="TargetCheckinDate">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Text="{Binding Path=TargetCheckinDate, StringFormat='G', ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" Visibility="{Binding Path=TargetExists, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </LoadingProgress:LoadingProgressControl>
                <LoadingProgress:LoadingProgressControl Grid.Row="2" Progress="{Binding Path=ChangesetsRefreshing}" IndicatorStyle="SmallIndicator" />
            </Grid>
            <Expander Grid.Row="2" Margin="0,10,0,0" BorderThickness="1" BorderBrush="LightGray">
                <Expander.Header>
                    <TextBlock FontWeight="Bold">
                Options ...
                    </TextBlock>
                </Expander.Header>
                <ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Auto">
                    <StackPanel Orientation="Vertical" Margin="10,10,0,0">
                        <CheckBox IsChecked="{Binding Path=AutoMergeDirectly}" Content="Merge without confirmation when no conflict occurs" />
                        <CheckBox IsChecked="{Binding Path=LinkMergeWithWorkItems}" Content="Link the merge changeset with the work items related to the source changeset" />
                        <TextBlock Margin="0,10,0,5">
                    Use this template for the merge check-in comment:
                        </TextBlock>
                        <TextBox Height="150" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="20,0,0,0" Text="{Binding Path=CheckInCommentTemplate}" />
                        <TextBlock FontSize="10">
                    {PrefixText} extracts everything up to the first ':' from {SourceComment}.<LineBreak/>
                    {OriginalId} gets replaced with the original changeset id. <LineBreak />
                    {OriginalDate} gets replaced with the original check-in date. <LineBreak />
                    {OriginalComment} gets replaced with the original check-in comment. <LineBreak />
                    {SourceId} gets replaced with the merge source changeset id. <LineBreak />
                    {SourceDate} gets replaced with the merge source check-in date. <LineBreak />
                    {SourceComment} gets replaced with the merge source check-in comment. <LineBreak />
                    {SourceBranch} gets replaced with the merge source branch name. <LineBreak />
                    {TargetBranch} gets replaced with the merge target branch name. <LineBreak />
                        </TextBlock>
                    </StackPanel>
                </ScrollViewer>
            </Expander>
            <Grid Grid.Row="3" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="247*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,3,3,3" Grid.Column="1">
                    <Button IsDefault="True" Content="Merge all" Margin="3" Command="{Binding Path=AutoMergeCommand}" Visibility="{Binding Path=NothingToMergeLeft, Converter={StaticResource BooleanToInvisibilityConverter}}">
                        <Button.ToolTip>
                            <ToolTip>
                                <TextBlock Foreground="White">
                            This will merge the changesets in ascending changeset id order until all are merged or a conflict raises.
                            <LineBreak />
                            Important: no dialog will be shown prior to check in. You will be asked to confirm that before the process starts.
                                </TextBlock>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button IsDefault="True" IsCancel="True" Content="Cancel" Margin="3" Visibility="{Binding Path=NothingToMergeLeft, Converter={StaticResource BooleanToInvisibilityConverter}}" Command="{Binding Path=OKCommand}"/>
                    <Button IsDefault="True" IsCancel="True" Content="Close" Margin="3" FontWeight="Black" Visibility="{Binding Path=NothingToMergeLeft, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding Path=OKCommand}"/>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="0" Background="#808080" Opacity="0.5"
              Visibility="{Binding Path=EmbeddedCheckInSummaryViewModel, Converter={StaticResource IsNotNullToVisibilityConverter}}">
        </Grid>
        <Border Grid.Column="0" Grid.Row="0" Margin="30"
            IsEnabled="{Binding Path=EmbeddedCheckInSummaryViewModel, Converter={StaticResource IsNotNullConverter}}"
            Visibility="{Binding Path=EmbeddedCheckInSummaryViewModel, Converter={StaticResource IsNotNullToVisibilityConverter}}"
                BorderBrush="Black" BorderThickness="1">
            <controls:CheckInSummaryControl DataContext="{Binding Path=EmbeddedCheckInSummaryViewModel}" />
        </Border>

    </Grid>
</UserControl>